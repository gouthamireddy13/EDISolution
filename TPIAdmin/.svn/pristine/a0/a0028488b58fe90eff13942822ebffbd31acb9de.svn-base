var ABApp = angular.module('ABApp');


ABApp.controller('tppController', function($scope,$modal, $http, $window) {
	
	$scope.ErrorMsg2=false;
	
	$scope.tpplist=[];
	$scope.ptcolList=[];
	$scope.drList=[];
	$scope.ttypeList=[];
	$scope.versionList=[];
	$scope.items = [];
	
	$scope.inittableList = function()
	{
		
		$http.get('/TPIAdmin/app/tpps')
	     .success(function (response, status, headers, config) {
	    	 tempList  = angular.copy(response);
	    	 
	     })
	     .error(function (data, status, header, config) {
	         $scope.ResponseDetails = "Data: " + data +
	             "<br />status: " + status ;
	         //    "<br />headers: " + jsonFilter(header) +
	           //  "<br />config: " + jsonFilter(config);
	     })
		 .then(function(response) {
			 angular.forEach(tempList, function (item) {
			
			
			 try
			 {var obj=
			 {       id:item.id, 
					 name:item.name,
					 type:item.type.description,
					 
					 data:item
				 };
			 
			 $scope.items.push(obj);
			 }catch(e)
			 {}
		
		
	    });
		 });
			 console.log("list "+JSON.stringify($scope.items) );	 
		    
	};
	$scope.inittpp = function()
	{
		
		
		 $http.get('/TPIAdmin/app/tppTypes')
	     .success(function (response, status, headers, config) {
	    	 $scope.tpplist = angular.copy(response);
	    	 
	     })
	     .error(function (data, status, header, config) {
	         $scope.ResponseDetails = "Data: " + data +
	             "<br />status: " + status ;
	         //    "<br />headers: " + jsonFilter(header) +
	           //  "<br />config: " + jsonFilter(config);
	     })
		 .then(function(response) {
			 $scope.protocolList();
		    });


		
		};
	
		$scope.updateSelection = function(position, entities) {
		      angular.forEach(entities, function(ptcol, index) {
		        if (position == index) 
		        	ptcol.checked = true;
		      });
		    }
		$scope.userData = [
	        {
	            name: 'John Doe',
	            selectedProducts: [
	                'coffee',
	                'beer',
	                'wine']
	        },
	        {
	            name: 'Jane Doe',
	            selectedProducts: [
	                'coffee',
	                'tea']
	        }
	    ];
	  $scope.products = ['coffee', 'beer', 'wine', 'tea', 'milk'];
		$scope.cleadata=function()
		{
			$scope.clearContact();
			$scope.revertTransAll();
			$scope.tppName=null;
			$scope.tppType=null;
			$scope.lightWellPartner={};
			$scope.showTable=false;
			$scope.showtransTable=false;
			 angular.forEach($scope.ptcolList, function (item) {
				 item.checked=false;
				
			 });
		};
		$scope.clickModal=function()
		{
			var txt="hello";
			if($scope.onlyNew)
				{
				$scope.user.msg=$scope.tppName+" has been added";
				}
			else
				{
				$scope.user.msg=$scope.tppName+" has been updated";
				}
			if($scope.user.del)
			{
				$scope.user.msg="Are you sure you want to delete the "+$scope.tppName+" Partner ?";	
			}
			
			var modalInstance = $modal.open({
	            templateUrl: 'myModalContent.html',
	            controller: 'ModalInstanceCtrl',
	            size: 'sm',
	        
	            
	            //size: size,
	            resolve: {
	                user: function() {
	                    return $scope.user;
	                },
	                
	                selectedProducts: function() {
	                    return $scope.userData.selectedProducts;
	                },
	                products: function () {
	                    //console.log($scope.selectedProducts);
	                    return $scope.products; // get all available products
	                }
	            }
	        });
	        
	        modalInstance.result.then(function (selectedItems) {
	        	if(selectedItems=="delete")
	        		{
	        	 console.log('eventX found on Controller1 $scope');
	             $http.delete('/TPIAdmin/app/partners/' + $scope.id)
	             .success(function (data, status, headers) {
	            	 location.reload();
	             })
	             .error(function (data, status, header, config) {
	                 $scope.ServerResponse = htmlDecode("Data: " + data +
	                     "\n\n\n\nstatus: " + status +
	                     "\n\n\n\nheaders: " + header +
	                     "\n\n\n\nconfig: " + config);
	             });
	        		}
	        }, function () {
	         
	        });
		};
		
		
		$scope.protocolList = function()
		{
			
			
			 $http.get('/TPIAdmin/app/protocols')
		     .success(function (response, status, headers, config) {
		    	 $scope.ptcolList = angular.copy(response);
		    	 
		     })
		     .error(function (data, status, header, config) {
		         $scope.ResponseDetails = "Data: " + data +
		             "<br />status: " + status ;
		         //    "<br />headers: " + jsonFilter(header) +
		           //  "<br />config: " + jsonFilter(config);
		     })
			 .then(function(response) {
				 $scope.directionList();
			    });


			
			};
			
			
			$scope.directionList = function()
			{
				
				
				 $http.get('/TPIAdmin/app/directions')
			     .success(function (response, status, headers, config) {
			    	 $scope.drList = angular.copy(response);
			    	 
			     })
			     .error(function (data, status, header, config) {
			         $scope.ResponseDetails = "Data: " + data +
			             "<br />status: " + status ;
			         //    "<br />headers: " + jsonFilter(header) +
			           //  "<br />config: " + jsonFilter(config);
			     })
				 .then(function(response) {
					 $scope.transactionTypeList();  
				    });


				
				};
				
				$scope.transactionTypeList = function()
				{
					
					
					 $http.get('/TPIAdmin/app/documents')
				     .success(function (response, status, headers, config) {
				    	 $scope.ttypeList = angular.copy(response);
				    	 
				     })
				     .error(function (data, status, header, config) {
				         $scope.ResponseDetails = "Data: " + data +
				             "<br />status: " + status ;
				         //    "<br />headers: " + jsonFilter(header) +
				           //  "<br />config: " + jsonFilter(config);
				     })
					 .then(function(response) {
						 $scope.versList();
					       
					    });


					
					};
					
					
					$scope.versList = function()
					{
						
						
						 $http.get('/TPIAdmin/app/versions')
					     .success(function (response, status, headers, config) {
					    	 $scope.versionList = angular.copy(response);
					    	 
					     })
					     .error(function (data, status, header, config) {
					         $scope.ResponseDetails = "Data: " + data +
					             "<br />status: " + status ;
					         //    "<br />headers: " + jsonFilter(header) +
					           //  "<br />config: " + jsonFilter(config);
					     })
						 .then(function(response) {
						       
						    });


						
						};
			
		$scope.contact={};
		$scope.contactList=[];
		$scope.transactionList=[];
		$scope.ErrorMsg=false;
		$scope.showTable=false;
		$scope.showtransTable=false;
		$scope.transaction={};
		$scope.ErrorMsg1=false;
		$scope.backtransactionList=[];
		
		$scope.findtrans=function(id1,id2,id3)
		{
			 var dir={
					 id:id1
					 
			 };
			 var doc=
				 {
					 id: id2
				 };
			 var versn=
				 {
					id: id3
				 };
			
			 angular.forEach($scope.drList, function (item) {
				 if(item.id==id1)
					 {
				 dir.directionCode=item.directionCode;
				 
					 }
			 });
			 angular.forEach($scope.ttypeList, function (item) {
				 if(item.id==id2)
					 {
					 doc.documentType=item.documentType;
				 
					 }
			 });
			 angular.forEach($scope.versionList, function (item) {
				 if(item.id==id3)
					 {
					 versn.versionNumber=item.versionNumber;
				 
					 }
			 });
		
			 var obj1=
			 {direction:dir,
				 document:doc,
				 version:versn
			 }
			 
			 $scope.backtransactionList.push(obj1);
		};
		
		$scope.editEnable=false;
		$scope.editcontact=function(contact)
		{
			if($scope.contact==undefined)
				{
				$scope.contact={};
				}
			$scope.contact.contactName = contact.contactName;
			$scope.contact.contactTitle = contact.contactTitle;
			$scope.contact.contactPhone =Number(contact.contactPhone);
			$scope.contact.contactEmail = contact.contactEmail;	
			$scope.editEnable=true;
			$scope.upbt=true;
			deleteobj=contact;
			
		};
		$scope.clearContact=function()
		{
			$scope.SavefuncName="SAVE";
			$scope.user.del=false;
			$scope.showTable=false;	
			$scope.contactList=angular.copy($scope.emptylist);
			$scope.hideEdit=false;
			$scope.onlyNew=true;
		};
		
		$scope.deletecontact=function(item)
		{
			
			    	
			    	var index = $scope.contactList.indexOf(item);
			    	  $scope.contactList.splice(index, 1);  
			    
			
		};
		$scope.addTransaction=function(flag,transaction)
		{
			
			if(!flag)
			{
			$scope.ErrorMsg1=true;
			return false;
			}
			
			if($scope.transEdit)
			{
				$scope.deletetrans(	$scope.transdel);
				//$scope.deletetransid($scope.transdel)
			}
			$scope.transEdit=false;
			$scope.uptransbt=false;
			var temp=angular.copy(transaction);
			if($scope.transactionList==null)
				$scope.transactionList=[];
			
				 var dir={
						 id:$scope.transaction.direction
						 
				 };
				 var doc=
					 {
						 id: $scope.transaction.document
					 };
				 var versn=
					 {
						id: $scope.transaction.version
					 };
				 var obj=
					 {direction:dir,
						 document:doc,
						 version:versn
					 }
				 $scope.transactionList.push(obj); 
				 $scope.findtrans($scope.transaction.direction , $scope.transaction.document ,$scope.transaction.version);
				 $scope.uptransbt=false;
				
				$scope.transaction.direction = null;
				$scope.transaction.document = null;
				$scope.transaction.version = null;
								$scope.showtransTable=true;
				console.log(JSON.stringify($scope.transactionList));
				$scope.ErrorMsg1=false;
		};
					
		$scope.deletetrans=function(item)
		{
			
			    	
			    	var index = $scope.backtransactionList.indexOf(item);
			    	$scope.backtransactionList.splice(index, 1);  
			    	
			
		};	
		$scope.deletetransid=function(id)
		{
			 angular.forEach( $scope.transactionList, function (item) {
				 if(item.id==id)
					 {
					 var index = $scope.backtransactionList.indexOf(item);
				    	$scope.transactionList.splice(index, 1); 
				 
					 }
			 });
			    	
			    	 
			    	
			
		};	
		$scope.transEdit=false;
					$scope.transdel={};
				$scope.Edittrans=function(trans)
				{
					$scope.transEdit=true;
					$scope.uptransbt=true;
					$scope.transaction.direction=trans.direction.id;
					$scope.transaction.document = trans.document.id;
					$scope.transaction.version = trans.version.id;
					$scope.transdel=trans;
					$scope.onlyNew=false;
					
				};

				$scope.revertAll=function()
				{
					$scope.upbt=false;
					$scope.ErrorMsg=false;
				    
				   
					$scope.editEnable=false;
					
					$scope.contact.contactName = null;
					$scope.contact.contactTitle = null;
					$scope.contact.contactPhone = null;
					$scope.contact.contactEmail = null;
				};
				
				$scope.revertTransAll=function()
				{
					$scope.uptransbt=false;
					$scope.ErrorMsg1=false;
				    
				   
					$scope.editEnable=false;
					$scope.transaction.direction = null;
					$scope.transaction.document = null;
					$scope.transaction.version = null;
				};
				
				$scope.uptransbt=false;
			$scope.addContact=function(flag,contact)
			{
				
				if(!flag)
				{
				$scope.ErrorMsg=true;
				return false;
				}
				if($scope.editEnable)
				{
				var index = $scope.contactList.indexOf(deleteobj);
				$scope.contactList.splice(index, 1);
				$scope.onlyNew=false;

					}
				$scope.editEnable=false;
				$scope.upbt=false;
				var temp=angular.copy(contact);
				if($scope.contactList==null)
					$scope.contactList=[];
					$scope.contactList.push(temp);
					$scope.contact.contactName = null;
					$scope.contact.contactTitle = null;
					$scope.contact.contactPhone = null;
					$scope.contact.contactEmail = null;
					$scope.showTable=true;
					console.log(JSON.stringify($scope.contactList));
					$scope.ErrorMsg=false;
			};
			if($scope.tppType=="1")	{		
				$scope.lightWellPartner={};
			};
			$scope.protoval=true;
			 $scope.ErrorMsgP=false;
			 $scope.onlyNew=true;
			 $scope.user={};
			$scope.savetpp = function(contactflag,transactionflag,flag){
				
			if(!contactflag&&$scope.contactList.length==0)
				{
				$scope.ErrorMsg=true;
				return false;
				}
				if(!transactionflag&&$scope.transactionList.length==0)
				{
				$scope.ErrorMsg1=true;
				return false;
				}
				if(!flag&&$scope.tppType=="1")
				{
				$scope.ErrorMsg2=true;
				return false;
				}
				
				$scope.protocol=[];
				var tempproto=[];
				 angular.forEach($scope.ptcolList, function (item) {
					 var obj={};
					 if(item.checked)
						 {
						 obj.id=item.id;
						 tempproto.push(obj);
						 $scope.protoval=false;
						 }
					
				 });
				 
				 if($scope.protoval)
				 {
					 $scope.ErrorMsgP=true;
					 return false;
				 }
				 
				 $scope.protocol=angular.copy(tempproto);
				 var typeobj=
					 {
						id:$scope.tppType 
					 };
				 
				 var submitobj=
					 {
					
						 type:typeobj,
					      name:$scope.tppName,
						 contactDetails:$scope.contactList,
							 protocols:$scope.protocol,
						    transactions:$scope.transactionList,
						    lightWellPartner:$scope.lightWellPartner
						    
					 };
				 $http.post("/TPIAdmin/app/tpps",submitobj)
					.success(function (response, status, headers, config) {
						 //$scope.grouplist = angular.copy(response);
						 console.log(JSON.stringify(response));
						$scope.ErrorMsg=false;
						$scope.ErrorMsg1=false;
						 $scope.id=angular.copy(response.id);
						 $scope.contactList=angular.copy(response.contactDetails);
					 })
					 .error(function (data, status, header, config) {
						 $scope.ErrorMsg=false;
						 $scope.ErrorMsg1=false;
						 $scope.ErrorMsg2=false;
					     $scope.ResponseDetails = "Data: " + data +
					         "<br />status: " + status ;
					     //    "<br />headers: " + jsonFilter(header) +
					       //  "<br />config: " + jsonFilter(config);
					 })
					.then(function(response) {
						$scope.ErrorMsg=false;
					    $scope.myWelcome = response;
					    $scope.clickModal();
					    
					});
									
			};
			
			
						
						
});