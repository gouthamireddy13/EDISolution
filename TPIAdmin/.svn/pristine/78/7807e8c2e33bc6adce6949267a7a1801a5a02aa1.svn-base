	// create the module and name it ABApp
	var ABApp = angular.module('ABApp', ['ngRoute']);

	// configure our routes
	ABApp.config(function($routeProvider) {
		$routeProvider

			// route for the Dashboard
			.when('/', {
				templateUrl : 'pages/home.html',
				controller  : 'mainController'
			})

			// route for the about page
			.when('/partnerManagement', {
				templateUrl : 'pages/partnerManagement.html',
				controller  : 'patnerManagementController'
			})

		});

	// create the controller and inject Angular's $scope
	ABApp.controller('mainController', function($scope) {
		// create a message to display in our view
		
	});

	
ABApp.controller('patnerManagementController', function($scope, $http, $window) {
	$scope.message = ' Partner Management ';
	$scope.ErrorMsg=false;
	$scope.items = [
			        {id: '123', partnerName: 'foo desc',contact:'foo',group:'grp1',subGroup:'subgrop1'},
			        {id: '111', partnerName: 'boo desc',contact:'boo',group:'grp1',subGroup:'subgrop1'},
			        {id: '333', partnerName: 'boo desc',contact:'boo',group:'grp1',subGroup:'subgrop1'},
			        {id: '555', partnerName: 'boo desc',contact:'boo',group:'grp1',subGroup:'subgrop1'},
			        {id: '222', partnerName: 'eco desc',contact:'eco',group:'grp1',subGroup:'subgrop1'}
			      ];
    $scope.OpenPopupWindow = function () {
               $window.open("pages/addPartnerDetails.html", "popup", "width=500, height=500");
           }
  
    $scope.submitPartnerDetails = function()
    {
    	
    	
    	$scope.message = 'submit Partner Details ';

		$scope.items.push({
			 	id : "111",
		        partnerName:  $scope.partnerNameINP,
		        contact: $scope.contactlist[0].contactTitleINP,
		        group :  'group1',
				subGroup :  'subgrop1',
		    });
    }
	$scope.contactList=[];
	$scope.addContact=function(flag,contact)
	{
		$scope.ErrorMsg=true;
		//$scope.tableshow=true;
		//$scope.contactlist.push({contactNameINP:'',contactTitleINP:'',contactPhoneINP:'',contactEmailINP:'',contactGroup:1,contactSubGroup:1});	
if(!flag)
	{
	return false;
	}
if($scope.contactGroup!=null&&($scope.contactSubGroup==null||$scope.contactSubGroup.length==0))
	{
	$scope.subgpreq=true;
	return false;
	}
//if(contact.id==undefined||contact.id==null)
//contact.id=$scope.contactList.length+1;
//contact.id=null;
$scope.subgpreq=false;
if($scope.editEnable)
	{
	if(deleteobj!=null)
	$scope.deletecontact(deleteobj);
	}
$scope.editEnable=false;


var temp=angular.copy(contact);
	if($scope.contactList==null)
		$scope.contactList=[];
		$scope.contactList.push(temp);
		$scope.contact.contactName = null;
		$scope.contact.contactTitle = null;
		$scope.contact.contactPhone = null;
		$scope.contact.contactEmail = null;
		$scope.showTable=true;
		console.log(JSON.stringify($scope.contactList));
		$scope.ErrorMsg=false;
	};
	
	
	$scope.clear=function()
	{
		$scope.ErrorMsg=false;
		
	    $scope.id = null;
		$scope.partnerName = null;
		$scope.contactGroup = null;
		$scope.contactSubGroup = null;
		if($scope.contact==null||$scope.contact==undefined)
			{
			return;
			}
		$scope.contact.contactName = null;
		$scope.contact.contactTitle = null;
		$scope.contact.contactPhone = null;
		$scope.contact.contactEmail = null;
		$scope.showTable=false;
		$scope.contactList= null;
		
		
	};
	$scope.editEnable=false;
	$scope.editcontact=function(contact)
	{
		$scope.contact.contactName = contact.contactName;
		$scope.contact.contactTitle = contact.contactTitle;
		$scope.contact.contactPhone =Number(contact.contactPhone);
		$scope.contact.contactEmail = contact.contactEmail;	
		$scope.editEnable=true;
		deleteobj=contact;
		
	};
	$scope.deleteobj=null;
	$scope.deletecontactt=function(item)
	{
		
		    	
		    	var index = $scope.contactList.indexOf(item);
		    	  $scope.contactList.splice(index, 1);  
		    	
		
	};
	$scope.deletecontact=function(item)
	{
		
		    	
		    	var index = $scope.contactList.indexOf(item);
		    	  $scope.contactList.splice(index, 1);  
		    
		
	};
	
	$scope.contactSubGroup=null;
	$scope.SubmitcontactList=function(flag)
	{
		$scope.ErrorMsg=true;
			
if($scope.contactList==null||$scope.contactList.length==0)
	{
	return false;
	}

var partnerGroupObj=
	{
	    id:$scope.contactSubGroup
		
		
	};
if($scope.editEnable)
{
var index = $scope.contactList.indexOf(deleteobj);
$scope.contactList.splice(index, 1);

	}
$scope.editEnable=false;
var submitObj=
	{
		id : $scope.id,
		partnerName:$scope.partnerName,
		contactDetails:$scope.contactList,
		partnerGroup:partnerGroupObj
	};
$http.post("/TPIAdmin/savePartner.json",submitObj)
.success(function (response, status, headers, config) {
	 //$scope.grouplist = angular.copy(response);
	 console.log(JSON.stringify(response));
	 $scope.ErrorMsg=false;
	 $scope.id=angular.copy(response.id);
	 $scope.contactList=angular.copy(response.contactDetails);
 })
 .error(function (data, status, header, config) {
	 $scope.ErrorMsg=false;
     $scope.ResponseDetails = "Data: " + data +
         "<br />status: " + status ;
     //    "<br />headers: " + jsonFilter(header) +
       //  "<br />config: " + jsonFilter(config);
 })
.then(function(response) {
	$scope.ErrorMsg=false;
    $scope.myWelcome = response;
    
});
		
		
	}
	
	$scope.grouplist=[];
	$scope.subgrouplist=[];
	$scope.initgroup = function()
	{
		
		$scope.editEnable=false;
		
		 $http.get('/TPIAdmin/getPartnerGroupNames.json')
	     .success(function (response, status, headers, config) {
	    	 $scope.grouplist = angular.copy(response);
	    	 console.log(JSON.stringify($scope.grouplist));
	     })
	     .error(function (data, status, header, config) {
	         $scope.ResponseDetails = "Data: " + data +
	             "<br />status: " + status ;
	         //    "<br />headers: " + jsonFilter(header) +
	           //  "<br />config: " + jsonFilter(config);
	     })
		 .then(function(response) {
		        $scope.myWelcome = response.data;
		    });


		
		};
		
		
		$scope.subgroupList=function(gpName)
		{
			console.log("hello");
			 $scope.subgpreq=false;
			$http.get('/TPIAdmin/getPartnerSubGroups.json?groupName='+gpName)
		     .success(function (response, status, headers, config) {
		    	 $scope.subgroupdisable=false;
		    	 $scope.subgrouplist = angular.copy(response);
		    	// console.log(JSON.stringify($scope.subgrouplist));
		     })
		     .error(function (data, status, header, config) {
		         $scope.ResponseDetails = "Data: " + data +
		             "<br />status: " + status ;
		         //    "<br />headers: " + jsonFilter(header) +
		           //  "<br />config: " + jsonFilter(config);
		     })
			 .then(function(response) {
			        $scope.myWelcome = response.data;
			        if($scope.contactGroup!=null&&($scope.contactSubGroup==null||$scope.contactSubGroup.length==0))
			    	{
			    	$scope.subgpreq=true;
			    	return false;
			    	}
			    $scope.subgpreq=false;
			     $scope.print(gpName);
			    });

		}
		
		
		$scope.print=function(gpname)
		{
			if(gpname=='N/a'|| gpname=='n/A')
				{
				$scope.contactSubGroup=$scope.subgrouplist[0].id;
				}
			 console.log(JSON.stringify($scope.contactSubGroup));
		}
	

	
	
	
	
	$scope.subgroupdisable=true;
	$scope.tableshow=false;
	$scope.contactlist=[];
	
});
	
