var ABApp = angular.module('ABApp');




ABApp.controller('tppController', function($scope,$modal, $http, $window, $filter) {
	
	 $scope.filteredTodos = [];
	 $scope.currentPage = 1;
	  $scope.numPerPage = 25;
	  $scope.maxSize = 5;
	  
	 
		  
		  $scope.$watch('currentPage + numPerPage', function() {
			  $scope.createPagination();
		  });
	$scope.createPagination = function(){
		var begin = (($scope.currentPage - 1) * $scope.numPerPage);
		var end = begin + $scope.numPerPage;
		

	    
	    $scope.filteredTodos = $scope.items.slice(begin, end);
	    $scope.searchPage($scope.stppname,true);
	};
	
	
	$scope.searchPage = function(search,flag){
		var temp = $filter("filter")($scope.items, {tppname:search});
		if(temp.length!=0)
			{
			var tempList = angular.copy(temp);
			var begin = (($scope.currentPage - 1) * $scope.numPerPage);
			var end = begin + $scope.numPerPage;
		    
		    $scope.filteredTodos =tempList.slice(begin, end);
		
			}
		else{
			
var begin = (($scope.currentPage - 1) * $scope.numPerPage), end = begin + $scope.numPerPage;
		    
		    $scope.filteredTodos = $scope.items.slice(begin, end);
		}
		if(flag==undefined)
		{
			$scope.currentPage=1;
		}
	};
	
	$scope.mPhone = false;
	 $scope.addMPhone = function () {
		 $scope.mPhone = true;
	 };
	 $scope.pPhone = false;
	 $scope.addPPhone = function () {
		 $scope.pPhone = true;
	 };
	 
	 
	 
	 
	 $scope.countryList=[{id:"US",mask:"(999) 999-9999"},{id:"Canada",mask:"(999) 999-9999"},{id:"India",mask:"9999999999"},{id:"Ireland",mask:"9999999999"},{id:"Switzerland",mask:"9999999999"},{id:"Mexico",mask:"9999999999"},{id:"Germany",mask:"99999999999"}];
	 $scope.mask = "(999) 999-9999";
	 $scope.setMask =  function(countryId){
		 if(countryId!= undefined){
		 var temp = $filter("filter")($scope.countryList, {id:countryId});
			if(temp.length!=0)
				{
				$scope.mask=temp[0].mask;
			
				}
		 }
		 else
			 {
			 $scope.mask = "(999) 999-9999";
			 }
	 };
	$scope.hidetitle=true;
	$scope.ErrorMsg2=false;
	
	$scope.tpplist=[];
	$scope.ptcolList=[];
	$scope.drList=[];
	$scope.ttypeList=[];
	$scope.versionList=[];
	$scope.items = [];
	$scope.sortType     = 'name'; 
	$scope.sortReverse  = false;
	$scope.btList = false;
	$scope.status = 'running';
	$scope.inittableList = function()
	{
		
		$scope.status = 'running';
		$http.get('/TPIAdmin/app/tpps')
	     .success(function (response, status, headers, config) {
	    	 tempList  = angular.copy(response);
	    	 
	     })
	     .error(function (data, status, header, config) {
	         $scope.ResponseDetails = "Data: " + data +
	             "<br />status: " + status ;
	         //    "<br />headers: " + jsonFilter(header) +
	           //  "<br />config: " + jsonFilter(config);
	     })
		 .then(function(response) {
			 angular.forEach(tempList, function (item) {
			
			
			 try
			 {var obj=
			 {       id:item.id, 
					 tppname:item.name,
					 type:item.type.description,
					 
					 data:item
				 };
			 
			 $scope.items.push(obj);
			 }catch(e)
			 {}
		
		
	    });
			 $scope.createPagination();	
			 $scope.status = 'done';
			 
   
		 });
		
	};
	$scope.emptylist=[];
	$scope.id=null;
	$scope.onlyNew=false;
	$scope.showData=function(item)
	{
		$scope.onlyNew=false;
		$scope.SavefuncName="SAVE";
		$scope.showTable=false;	
		$scope.contactList=angular.copy($scope.emptylist);
		$scope.user.del=false;
		$scope.hideEdit=true;
		
		$scope.id=item.id;
		
		$scope.tppType = item.type.id;
		$scope.tppName=item.name;
		
		 angular.forEach(item.contactDetails, function (temp) {
var obj=
	{   
		
	    id : temp.id,
		contactName : temp.contactName,
		contactTitle : temp.contactTitle,
		country : temp.country,
		contactPhone : temp.contactPhone,
		mobilePhone : temp.mobilePhone,
		personalPhone : temp.personalPhone,
		contactEmail : temp.contactEmail,
		transactionType :{id:temp.transactionType.id} 
	};
$scope.contactList.push(obj);
$scope.SavefuncName="EDIT";
		 });
$scope.protocolList(item);
		
$scope.showTable=true;
if(item.lightWellPartner!=null)
	{
	$scope.lightWellPartner={};
$scope.lightWellPartner.testIsaID=item.lightWellPartner.testIsaID;
$scope.lightWellPartner.productionIsaID=item.lightWellPartner.productionIsaID;
$scope.lightWellPartner.testIsaQualifier=item.lightWellPartner.testIsaQualifier;
$scope.lightWellPartner.productionIsaQualifier=item.lightWellPartner.productionIsaQualifier;
$scope.lightWellPartner.testGsId=item.lightWellPartner.testGsId;
$scope.lightWellPartner.productionGsId=item.lightWellPartner.productionGsId;
	
	
	}	
	};
	$scope.disablesave=false;
	$scope.EditTppPartner=function()
	{
		//$scope.user.edit=true;
		//$scope.user.trans=false;
	$scope.hideEdit=false;
		//$scope.clickModal();
	};
	
	$scope.showName = function(item){
		var tempt = $filter("filter")($scope.tList, {id:item},true);
		if(tempt.length!=0)
			{
			return tempt[0].documentDescription;
			}
		return item;
	};
	
	$scope.tList = []
	$scope.initTransactionTypeList = function()
	{
		
		
		 $http.get('/TPIAdmin/app/documents')
	     .success(function (response, status, headers, config) {
	    	 $scope.tList = angular.copy(response);
	    	 
	     })
	     .error(function (data, status, header, config) {
	         $scope.ResponseDetails = "Data: " + data +
	             "<br />status: " + status ;
	         //    "<br />headers: " + jsonFilter(header) +
	           //  "<br />config: " + jsonFilter(config);
	     })
		 .then(function(response) {
			 
		       
		    });


		
		};
		
	
	
	$scope.inittpp = function()
	{
		
		
		 $http.get('/TPIAdmin/app/tppTypes')
	     .success(function (response, status, headers, config) {
	    	 $scope.tpplist = angular.copy(response);
	    	 
	     })
	     .error(function (data, status, header, config) {
	         $scope.ResponseDetails = "Data: " + data +
	             "<br />status: " + status ;
	         //    "<br />headers: " + jsonFilter(header) +
	           //  "<br />config: " + jsonFilter(config);
	     })
		 .then(function(response) {
			 $scope.protocolList();
		    });


		
		};
	
		$scope.updateSelection = function(position, entities) {
		      angular.forEach(entities, function(ptcol, index) {
		    	 /* if (position == index) 
			        	ptcol.checked = true; */
		    	     if($scope.tppType == '3'){
		    	  
		    	    	 if (position == index) 
		        	ptcol.checked = true;
		        }
		        else
		        	
		        	{
		        	if (position != index) 
			        	ptcol.checked = false;
		        	}
		      });
		    }
		$scope.userData = [
	        {
	            name: 'John Doe',
	            selectedProducts: [
	                'coffee',
	                'beer',
	                'wine']
	        },
	        {
	            name: 'Jane Doe',
	            selectedProducts: [
	                'coffee',
	                'tea']
	        }
	    ];
	  $scope.products = ['coffee', 'beer', 'wine', 'tea', 'milk'];
		$scope.cleadata=function()
		{
			$('.extra3').scrollTop(0);
			$scope.mPhone = false;
			$scope.pPhone = false;
			$scope.emptyNm = false;
			$scope.ErrorMsg=false;
			$scope.ErrorMsgP = false;
			$scope.ErrorMsg1=false;
			$scope.cList = false;
			$scope.btList = false;
			$scope.ErrorMsg2=false;
			$scope.ErrorMsgP=false;
			$scope.upbt=false;
			$scope.validName=false;
			$scope.clearContact();
			$scope.revertAll();
			$scope.revertTransAll();
			$scope.id = null;
			$scope.tppName=null;
			$scope.tppType=null;
			$scope.lightWellPartner={};
			$scope.showTable=false;
			$scope.showtransTable=false;
			var emptyt=[];
			$scope.backtransactionList=angular.copy(emptyt);
			 angular.forEach($scope.ptcolList, function (item) {
				 item.checked=false;
				
			 });
		};
		
		$scope.ptcolLimit= function(){
			if($scope.tppType == "1" || $scope.tppType == "2" ){
			angular.forEach($scope.ptcolList, function (item) {
				 item.checked=false;
				
			 });
			};
		}
		$scope.deleteTpp=function()
		{
			$scope.user.del=true;
			 $scope.clickModal();
			 

		};
		$scope.user={del:false,edit:false};
		$scope.clickModal=function()
		{
			var txt="hello";
			if($scope.onlyNew)
				{
				$scope.user.msg=$scope.tppName+" has been added";
				}
			else
				{
				$scope.user.msg=$scope.tppName+" has been updated";
				}
			if($scope.user.del)
			{
				$scope.user.msg="Are you sure you want to delete the "+$scope.tppName+" Partner ?";	
			}
			
			if($scope.user.edit)
			{
				$scope.user.msg="Are you sure to delete the contact ?";	
			}
			if($scope.user.trans)
			{
				$scope.user.msg="Are you sure to delete transaction ?";	
			}
			
			var modalInstance = $modal.open({
	            templateUrl: 'myModalContent.html',
	            controller: 'ModalInstanceCtrl',
	            size: 'sm',
	        
	            
	            //size: size,
	            resolve: {
	                user: function() {
	                    return $scope.user;
	                },
	                
	                selectedProducts: function() {
	                    return $scope.userData.selectedProducts;
	                },
	                products: function () {
	                    //console.log($scope.selectedProducts);
	                    return $scope.products; // get all available products
	                }
	            }
	        });
	        
	        modalInstance.result.then(function (selectedItems) {
	        	if(selectedItems=="delete")
	        		{
	        	 console.log('eventX found on Controller1 $scope');
	             $http.delete('/TPIAdmin/app/tpps/' + $scope.id)
	             .success(function (data, status, headers) {
	            	 location.reload();
	             })
	             .error(function (data, status, header, config) {
	                 $scope.ServerResponse = htmlDecode("Data: " + data +
	                     "\n\n\n\nstatus: " + status +
	                     "\n\n\n\nheaders: " + header +
	                     "\n\n\n\nconfig: " + config);
	             });
	        		}
	        	else	if(selectedItems=="edit")
	        		{
	        		
			    	var index = $scope.contactList.indexOf($scope.delcon);
			    	  $scope.contactList.splice(index, 1);  
			    	  $scope.delcon=null;
	        		}
	        	else if(selectedItems=="transedit" )
	        		{
			    	var index = $scope.backtransactionList.indexOf($scope.transdObj);
			    	$scope.backtransactionList.splice(index, 1); 
			    	$scope.transdObj==null;
			    	
	        		}
	        }, function () {
	         
	        });
		};
		
		
		$scope.protocolList = function(dblist)
		{
			
			
			 $http.get('/TPIAdmin/app/protocols')
		     .success(function (response, status, headers, config) {
		    	 $scope.ptcolList = angular.copy(response);
		    	 
		     })
		     .error(function (data, status, header, config) {
		         $scope.ResponseDetails = "Data: " + data +
		             "<br />status: " + status ;
		         //    "<br />headers: " + jsonFilter(header) +
		           //  "<br />config: " + jsonFilter(config);
		     })
			 .then(function(response) {
				 if(dblist!=undefined)
					 {
					 angular.forEach($scope.ptcolList, function (item) {
						 
						 angular.forEach(dblist.protocols, function (item1) {
							 
								if(item1.id==item.id)
									{
									item.checked=true;
									}
								
						 });
						
					 });
					 $scope.showtransTable=true;
					 }
				 $scope.directionList(dblist);
			    });


			
			};
			
			
			$scope.directionList = function(dbList)
			{
				
				
				 $http.get('/TPIAdmin/app/directions')
			     .success(function (response, status, headers, config) {
			    	 $scope.drList = angular.copy(response);
			    	 
			     })
			     .error(function (data, status, header, config) {
			         $scope.ResponseDetails = "Data: " + data +
			             "<br />status: " + status ;
			         //    "<br />headers: " + jsonFilter(header) +
			           //  "<br />config: " + jsonFilter(config);
			     })
				 .then(function(response) {
					 
					 $scope.transactionTypeList(dbList);  
				    });


				
				};
				
				$scope.transactionTypeList = function(dbList)
				{
					
					
					 $http.get('/TPIAdmin/app/documents')
				     .success(function (response, status, headers, config) {
				    	 $scope.ttypeList = angular.copy(response);
				    	 
				     })
				     .error(function (data, status, header, config) {
				         $scope.ResponseDetails = "Data: " + data +
				             "<br />status: " + status ;
				         //    "<br />headers: " + jsonFilter(header) +
				           //  "<br />config: " + jsonFilter(config);
				     })
					 .then(function(response) {
						 $scope.versList(dbList);
					       
					    });


					
					};
					
					
					$scope.versList = function(dbList)
					{
						
						
						 $http.get('/TPIAdmin/app/versions')
					     .success(function (response, status, headers, config) {
					    	 $scope.versionList = angular.copy(response);
					    	 
					     })
					     .error(function (data, status, header, config) {
					         $scope.ResponseDetails = "Data: " + data +
					             "<br />status: " + status ;
					         //    "<br />headers: " + jsonFilter(header) +
					           //  "<br />config: " + jsonFilter(config);
					     })
						 .then(function(response) {
						       if(dbList!=undefined)
						    	   {
						    	   
						    	   $scope.transactionList=[];
									 angular.forEach(dbList.transactions, function (item) {
										
											
										 var dir={
												 id:item.direction.id
												 
										 };
										 var doc=
											 {
												 id: item.document.id
											 };
										 var versn=
											 {
												id: item.version.id
											 };
										 var obj=
											 {
												id:item.id,
												 direction:dir,
												 document:doc,
												 version:versn
											 }
										 $scope.transactionList.push(obj); 
							 $scope.findtrans(item.direction.id , item.document.id ,item.version.id,item.id);

									 });
						    	   }
						    });


						
						};
			
		$scope.contact={};
		$scope.contactList=[];
		$scope.transactionList=[];
		$scope.ErrorMsg=false;
		$scope.ErrorMsgP = false;
		$scope.showTable=false;
		$scope.showtransTable=false;
		$scope.transaction={};
		$scope.ErrorMsg1=false;
		$scope.backtransactionList=[];
		
		$scope.findtrans=function(id1,id2,id3,dbid)
		{
			 var dir={
					 id:id1
					 
			 };
			 var doc=
				 {
					 id: id2
				 };
			 var versn=
				 {
					id: id3
				 };
			
			 angular.forEach($scope.drList, function (item) {
				 if(item.id==id1)
					 {
				 dir.directionCode=item.directionCode;
				 
					 }
			 });
			 angular.forEach($scope.ttypeList, function (item) {
				 if(item.id==id2)
					 {
					 doc.documentDescription=item.documentDescription;
				 
					 }
			 });
			 angular.forEach($scope.versionList, function (item) {
				 if(item.id==id3)
					 {
					 versn.versionNumber=item.versionNumber;
				 
					 }
			 });
		
			 var obj1=
			 {direction:dir,
				 document:doc,
				 version:versn
			 }
			 if(dbid!=undefined)
				 {
				 obj1.id=dbid;
				 }
			 $scope.backtransactionList.push(obj1);
		};
		
		$scope.editEnable=false;
		$scope.editcontact=function(contact)
		{
			$scope.mPhone = true;
			$scope.pPhone = true;
			if($scope.contact==undefined)
				{
				$scope.contact={};
				}
			$scope.contact.contactName = contact.contactName;
			$scope.contact.contactTitle = contact.contactTitle;
			$scope.contact.country = contact.country.toString();
			$scope.setMask($scope.contact.country);
			$scope.contact.contactPhone = Number(contact.contactPhone);
			$scope.contact.mobilePhone = Number(contact.mobilePhone);
			
			$scope.contact.personalPhone = Number(contact.personalPhone);
			$scope.contact.contactEmail = contact.contactEmail;
			if($scope.contact.transactionType==undefined||$scope.contact.transactionType==null)
			{
			$scope.contact.transactionType={};
			}
		$scope.contact.transactionType.id=[];
		$scope.contact.transactionType.id.push(contact.transactionType.id);
			$scope.editEnable=true;
			$scope.upbt=true;
			deleteobj=contact;
			
		};
		$scope.clearContact=function()
		{
			$scope.SavefuncName="SAVE";
			$scope.user.del=false;
			$scope.showTable=false;	
			$scope.contactList=angular.copy($scope.emptylist);
			$scope.hideEdit=false;
			$scope.onlyNew=true;
		};
		
		$scope.deletecontact=function(item,flag)
		{
			
			$scope.user.edit=true;
			 $scope.user.trans=false;
			$scope.delcon=item;
			$scope.clickModal();  	  
			    
			
		};
		$scope.addTransaction=function(flag,transaction)
		{
			$scope.btList=false;
			if(!flag)
			{
			$scope.ErrorMsg1=true;
			return false;
			}
			
			if($scope.transEdit)
			{
				$scope.deletetrans(	$scope.transdel,true);
				//$scope.deletetransid($scope.transdel)
			}
			$scope.transEdit=false;
			$scope.uptransbt=false;
			var temp=angular.copy(transaction);
			if($scope.transactionList==null)
				$scope.transactionList=[];
			
				 var dir={
						 id:$scope.transaction.direction
						 
				 };
				 var doc=
					 {
						 id: $scope.transaction.document
					 };
				 var versn=
					 {
						id: $scope.transaction.version
					 };
				 var obj=
					 {direction:dir,
						 document:doc,
						 version:versn
					 }
				 $scope.transactionList.push(obj); 
				 $scope.findtrans($scope.transaction.direction , $scope.transaction.document ,$scope.transaction.version);
				 $scope.uptransbt=false;
				
				$scope.transaction.direction = null;
				$scope.transaction.document = null;
				$scope.transaction.version = null;
								$scope.showtransTable=true;
				console.log(JSON.stringify($scope.transactionList));
				$scope.ErrorMsg1=false;
		};
					$scope.transdObj=null;
		$scope.deletetrans=function(item,flag)
		{
			$scope.user.edit=false;
			$scope.user.trans=true;
			$scope.transdObj=item;
			if(flag!=undefined)
				{
				var index = $scope.backtransactionList.indexOf($scope.transdObj);
		    	$scope.backtransactionList.splice(index, 1); 
		    	$scope.transdObj==null;
				
				}else
					{
			 $scope.clickModal();
			    	
					}
		};	
		$scope.deletetransid=function(id)
		{
			 angular.forEach( $scope.transactionList, function (item) {
				 if(item.id==id)
					 {
					 var index = $scope.backtransactionList.indexOf(item);
				    	$scope.transactionList.splice(index, 1); 
				 
					 }
			 });
			    	
			    	 
			    	
			
		};	
		$scope.transEdit=false;
					$scope.transdel={};
					
				$scope.Edittrans=function(trans)
				{
					$scope.user.trans=false;
					$scope.transEdit=true;
					$scope.uptransbt=true;
					$scope.transaction.direction=trans.direction.id;
					$scope.transaction.document = trans.document.id;
					$scope.transaction.version = trans.version.id;
					$scope.transdel=trans;
					//$scope.onlyNew=false;
					
				};

				$scope.revertAll=function()
				{
					$scope.upbt=false;
					$scope.ErrorMsg=false;
				    
				   
					$scope.editEnable=false;
					
					$scope.contact.contactName = null;
					$scope.contact.contactTitle = null;
					$scope.contact.country  = null;
					$scope.contact.contactPhone = null;
					$scope.contact.mobilePhone = null;
					$scope.contact.personalPhone = null;
					$scope.contact.contactEmail = null;
					$scope.contact.transactionType = {};
					$scope.contact.transactionType.id = null;
				};
				
				$scope.revertTransAll=function()
				{
					$scope.uptransbt=false;
					$scope.ErrorMsg1=false;
				    $scope.editEnable=false;
					$scope.transaction.direction = null;
					$scope.transaction.document = null;
					$scope.transaction.version = null;
				};
				
				$scope.uptransbt=false;
			$scope.addContact=function(flag,contact)
			{
				$scope.mPhone = false;
				$scope.pPhone = false;
				if(!flag)
				{
				$scope.ErrorMsg=true;
				return false;
				}
				if($scope.editEnable)
				{
				var index = $scope.contactList.indexOf(deleteobj);
				$scope.contactList.splice(index, 1);
			//	$scope.onlyNew=false;

					}
				$scope.editEnable=false;
				$scope.cList=false;
				$scope.upbt=false;
				if($scope.contactList==null)
					$scope.contactList=[];
				angular.forEach($scope.contact.transactionType.id, function (item) {
					var obj=
						{
							contactName:$scope.contact.contactName,
							contactTitle:$scope.contact.contactTitle,
							country: $scope.contact.country ,
							contactPhone:$scope.contact.contactPhone,
							mobilePhone:$scope.contact.mobilePhone,
							personalPhone:$scope.contact.personalPhone,
							contactEmail:$scope.contact.contactEmail,
							transactionType:{id:item}
						};
					
					$scope.contactList.push(obj);
				});


					
						
						$scope.contact.contactName = null;
						$scope.contact.contactTitle = null;
						$scope.contact.country  = null;
						$scope.contact.contactPhone = null;
						
						$scope.contact.mobilePhone = null;
					
						
						$scope.contact.personalPhone = null;
						
						$scope.contact.contactEmail = null;
						$scope.contact.transactionType.id = null;
						
						$scope.showTable=true;
						console.log(JSON.stringify($scope.contactList));
						$scope.ErrorMsg=false;
			};
			$scope.cList = false;
			$scope.btList = false;
			$scope.protoval=true;
			 $scope.ErrorMsgP=false;
			 $scope.onlyNew=true;
			 $scope.user={};
			 $scope.validateName="";
				$scope.validName=false;
				$scope.emptyNm = false;
				$scope.checktppNameandSubmit = function(name,contactflag,transactionflag,flag)
				{
					if(name == undefined || name == null || name.length == 0){
						$scope.emptyNm = true;
						return false;
					}
					if($scope.contactList.length < 1){
		                $scope.cList = true;
						return;
					}
					if($scope.backtransactionList.length < 1){
		                $scope.btList = true;
						return;
					}
					$scope.emptyNm = false;
					
					$scope.validName=false;
					$scope.ErrorMsg=false;
					 $scope.user.del=false;
					 $scope.user.edit=false;
					 $scope.user.trans=false;
					if($scope.onlyNew)
						{
					 $http.get('/TPIAdmin/app/tpps/exists?name='+name)
				     .success(function (response, status, headers, config) {
				    		$scope.validateName=response;
				     })
				     .error(function (data, status, header, config) {
				         $scope.ResponseDetails = "Data: " + data +
				             "<br />status: " + status ;
				         //    "<br />headers: " + jsonFilter(header) +
				           //  "<br />config: " + jsonFilter(config);
				     })
					 .then(function(response) {
					        $scope.myWelcome = response.data;
					        if($scope.validateName!="true")
					        	{
					        	$scope.savetpp(contactflag,transactionflag,flag);
					        	}
					        else
					        	{
					        //	$scope.ErrorMsg=true;
					        	$scope.validName=true;
					        	}
					    });

						}
					else
						{
						$scope.savetpp(contactflag,transactionflag,flag);
						}
					
					};
			 
			 
			$scope.savetpp = function(contactflag,transactionflag,flag){
					
			if(!contactflag&&$scope.contactList.length==0)
				{
				$scope.ErrorMsg=true;
				return false;
				}
				if(!transactionflag&&$scope.transactionList.length==0)
				{
				$scope.ErrorMsg1=true;
				return false;
				}
				if(!flag&&$scope.tppType=="1")
				{
				$scope.ErrorMsg2=true;
				return false;
				}
				
				$scope.protocol=[];
				var tempproto=[];
				 angular.forEach($scope.ptcolList, function (item) {
					 var obj={};
					 if(item.checked)
						 {
						 obj.id=item.id;
						 tempproto.push(obj);
						 $scope.protoval=false;
						 }
					
				 });
				 
				 if($scope.protoval)
				 {
					 $scope.ErrorMsgP=true;
					 return false;
				 }
				 
				 $scope.protocol=angular.copy(tempproto);
				 var typeobj=
					 {
						id:$scope.tppType 
					 };
				 
					if($scope.tppType=="2" ||$scope.tppType=="3" )	{		
						$scope.lightWellPartner= null;
					};
					var tempList=[];
					$scope.disablesave=true;
					 angular.forEach($scope.backtransactionList, function (item) {
						
							
						 var dir={
								 id:item.direction.id
								 
						 };
						 var doc=
							 {
								 id: item.document.id
							 };
						 var versn=
							 {
								id: item.version.id
							 };
						 var obj1=
							 {
								id:item.id,
								 direction:dir,
								 document:doc,
								 version:versn
							 }
						 tempList.push(obj1);
						 
						 
					 });
						  
					
				 var submitobj=
					 {
					     id:$scope.id,
						 type:typeobj,
					     name:$scope.tppName,
						 contactDetails:$scope.contactList,
						 protocols:$scope.protocol,
						 transactions:tempList,
						 lightWellPartner:$scope.lightWellPartner
						    
					 };
				 $http.post("/TPIAdmin/app/tpps",submitobj)
					.success(function (response, status, headers, config) {
						 //$scope.grouplist = angular.copy(response);
						 console.log(JSON.stringify(response));
						 $scope.disablesave=false;
						$scope.ErrorMsg=false;
						$scope.ErrorMsg1=false;
						 $scope.id=angular.copy(response.id);
						 $scope.contactList=angular.copy(response.contactDetails);
					 })
					 .error(function (data, status, header, config) {
						 $scope.ErrorMsg=false;
						 $scope.ErrorMsg1=false;
						 $scope.ErrorMsg2=false;
					     $scope.ResponseDetails = "Data: " + data +
					         "<br />status: " + status ;
					     //    "<br />headers: " + jsonFilter(header) +
					       //  "<br />config: " + jsonFilter(config);
					 })
					.then(function(response) {
						$scope.ErrorMsg=false;
					    $scope.myWelcome = response;
					    $scope.clickModal();
					    
					});
									
			};
			
			
						
						
});