package com.abc.tpi.model.service;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import com.abc.tpi.model.master.Direction;
import com.abc.tpi.model.master.Document;
import com.abc.tpi.model.master.Version;

@Entity
@NamedQueries
(
	{
	@NamedQuery(name="ServiceType.namedFindAllServiceTypesByServiceCategoryId", query="select m from ServiceType m where m.serviceCategory.id = :serviceCategoryId"),
	@NamedQuery(name="ServiceType.namedFindServiceTypesForServiceCategoryAndTransaction", query="select m from ServiceType m where m.serviceCategory.id = :serviceCategoryId and direction.id = :directionId and document.id=:documentId and version.id=:versionId")
	}
)

@Table(name="ABC_TPI_SERVICE_TYPE")
public class ServiceType {
	@Id
	@SequenceGenerator(name="ABC_TPI_SERVICE_TYPE_GEN", sequenceName="ABC_TPI_SERVICE_TYPE_SEQ",allocationSize=10)
	@GeneratedValue(generator="ABC_TPI_SERVICE_TYPE_GEN")
	@Column(name="SERVICE_TYPE_ID")
	private Long id;
	
	@NotNull(message="Service Category value is required")
	@ManyToOne
	@JoinColumn(name="SC_ID", nullable=false)
	private ServiceCategory serviceCategory;
	
	@NotNull(message="Service Name value is required")
	@Column(name="SERVICE_NAME",nullable=false)
	private String businessServiceName;
	
	@NotNull(message="Direction value is required")
	@ManyToOne
	@JoinColumn(name="DIRECTION_ID", nullable=false)
	private Direction direction;
	
	@NotNull(message="Document value is required")
	@ManyToOne
	@JoinColumn(name="DOC_ID", nullable=false)
	private Document document;
	
	@NotNull(message="Version value is required")
	@ManyToOne
	@JoinColumn(name="VERSION_ID", nullable=false)
	private Version version;
	
	public String getBusinessServiceName() {
		return businessServiceName;
	}
	public Direction getDirection() {
		return direction;
	}
	public Document getDocument() {
		return document;
	}
	public Long getId() {
		return id;
	}
	public ServiceCategory getServiceCategory() {
		return serviceCategory;
	}
	public Version getVersion() {
		return version;
	}
	public void setBusinessServiceName(String businessServiceName) {
		this.businessServiceName = businessServiceName;
	}
	public void setDirection(Direction direction) {
		this.direction = direction;
	}
	public void setDocument(Document document) {
		this.document = document;
	}
	public void setServiceCategory(ServiceCategory serviceCategory) {
		this.serviceCategory = serviceCategory;
	}
	public void setVersion(Version version) {
		this.version = version;
	}
}
