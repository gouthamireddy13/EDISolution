package com.abc.tpi.model.master;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import com.abc.tpi.domain.core.PartnerType;
import com.abc.tpi.domain.core.Company;

@Entity
@NamedQueries
(
	{
	@NamedQuery(name="Map.namedFindMapByServiceTypeId", 
				query="select m from Map m, ServiceType st "
					+ " where st.id = :serviceTypeId AND m.document = st.document and m.direction = st.direction order by m.mapName")
	}
)

@Table(name="ABC_TPI_MAP",uniqueConstraints=@UniqueConstraint(columnNames={"COMPANY", "PARTNER_TYPE","DOC_TYPE","DIRECTION_ID"}))

public class Map {

	@Id
	@SequenceGenerator(name="ABC_TPI_MAP_GEN", sequenceName="ABC_TPI_MAP_SEQ",allocationSize=10)
	@GeneratedValue(generator="ABC_TPI_MAP_GEN")	
	@Column(name="MAP_ID")
	private Long id;
	
	@Column(name="COMPANY", nullable = false)
	@Enumerated(EnumType.STRING)	
	private Company company;
	
	@Column(name="PARTNER_TYPE", nullable=false)
	@Enumerated(EnumType.STRING)	
	private PartnerType partnerType;
	
	@NotNull(message="Document is required")
	@ManyToOne
	@JoinColumn(name="DOC_TYPE", nullable=false)
	private Document document;
	
	@NotNull(message="Direction is required")
	@ManyToOne
	@JoinColumn(name="DIRECTION_ID", nullable=false)
	private Direction direction;
	
	@NotNull
	@Column(name="MAP_NAME",nullable=false,unique=false)
	private String mapName;
	
	@Column(name="MAP_DESC",nullable=true)
	private String mapDescription;
	
	public Map()
	{
		company = Company.ABDC;
		partnerType = PartnerType.SUPPLIER;
	}

	public Map(Company company, PartnerType partnerType)
	{
		this.company = company;
		this.partnerType = partnerType;
	}
	
	public Company getCompany() {
		return company;
	}

	public Direction getDirection() {
		return direction;
	}

	public Document getDocument() {
		return document;
	}

	public Long getId() {
		return id;
	}

	public String getMapDescription() {
		return mapDescription;
	}

	public String getMapName() {
		return mapName;
	}

	public PartnerType getPartnerType() {
		return partnerType;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	public void setDirection(Direction direction) {
		this.direction = direction;
	}

	public void setDocument(Document document) {
		this.document = document;
	}

	public void setMapDescription(String mapDescription) {
		this.mapDescription = mapDescription;
	}

	public void setMapName(String mapName) {
		this.mapName = mapName;
	}

	public void setPartnerType(PartnerType partnerType) {
		this.partnerType = partnerType;
	}

}
