package com.abc.tpi.service;

import java.util.Collection;
import java.util.List;

import org.springframework.stereotype.Service;

import com.abc.tpi.common.exceptions.TpiRepositoryException;
import com.abc.tpi.model.poc.TpiManagedEntity;
import com.abc.tpi.model.search.projections.ServiceSubscription.BusinessServiceWithParentInfo;
import com.abc.tpi.model.search.projections.ServiceSubscription.ServiceSubscriptionWithGsIdIsaId;
import com.abc.tpi.model.service.BusinessService;
import com.abc.tpi.model.service.ServiceCategory;
import com.abc.tpi.model.service.ServiceCategoryForDropDownProjection;
import com.abc.tpi.model.service.ServiceSubscription;
import com.abc.tpi.model.service.ServiceSubscriptionListViewProjection;
import com.abc.tpi.model.service.ServiceType;
import com.abc.tpi.model.tpp.LightWellPartner;
@Service ("serviceSubscriptionService")
public interface ServiceSubscriptionService {

	List<ServiceType> getBusinessServiceForTppAndServiceCat(long serviceCategoryId , long tppId) throws TpiRepositoryException;
	ServiceSubscription saveServiceSubscription(ServiceSubscription serviceSubscription) throws TpiRepositoryException;
	List<ServiceSubscription> getAllServiceSubscriptions();
	List<ServiceType> getAllServiceTypes();
	List<ServiceCategory> getAllServiceCategories();
	List<ServiceCategory> getAllServiceCategoriesOrderByName();
	List<ServiceCategory> findAllByCategoryName(String name);
	
	ServiceCategory saveServiceCategory(ServiceCategory serviceCategory);
	ServiceCategory findServiceCategoryById(long id);
	ServiceCategory findServiceCategoryByNameIgnoreCase(String name);
	
	
	ServiceType saveServiceType(ServiceType serviceType);
	List<ServiceCategoryForDropDownProjection> getServiceCategoriesForDropDown();
	List<ServiceSubscriptionListViewProjection> getServiceSubscriptionsListView();
	ServiceSubscription getServiceSubscription(long id);
	void deleteServiceSubscription(long id);
	void deleteServiceSubscription(ServiceSubscription serviceSubscription);
	void deleteServiceCategory(long id);
	
	LightWellPartner findLightWellParnterByServiceCategoryLWid(long serviceCategoryId,long lightWellId);
	LightWellPartner findLightWellPartner(String testIsaID,String testIsaQualifier,String testGsId,String productionIsaID,String productionIsaQualifier,String productionGsId,boolean isActive);
	LightWellPartner findOneLightWellPartnerByAttribute(String attName, String value);
	LightWellPartner findOneLightWellPartnerByAttributeValues(String testIsaId, String testGsId, String prodIsaId, String prodGsId, Long lwId);
	void deleteLightWellPartner(long id);
	
	Collection<BusinessService> findBusinessServicesByServiceId(long serviceId);
	Collection<BusinessService> findBusinessServicesByServiceSubscriptionAndServiceId(long serviceSubscription, long serviceId);
	com.abc.tpi.model.service.Service findServiceByServiceIdForSubscription(long serviceSubscription, long serviceId);
	BusinessService findBusinessServiceByIdForSubscription(long serviceSubscription, long serviceId, long businessServiceId);
	Collection<Long> findServiceSubscriptionByPartnerAndServiceCategory(long partnerId,long serviceCategoryId);
	Collection<ServiceSubscriptionWithGsIdIsaId> getAllServiceSubscriptionsWithGsIdIsId();
	Collection<ServiceSubscription> findServiceSubscriptionBySrId(String srId);
	List<BusinessServiceWithParentInfo> findBusinessServiceWithParentBySrId(String srId);
	List<BusinessServiceWithParentInfo> findBusinessServiceWithParentByPartnerName(String partnerName);
	
	ServiceSubscription findServiceSubscriptionById(Long id);
	Integer findServiceSubscriptionVersionById(long id);
	Integer findServiceVersionById(long serviceId);
	Integer findBusinessServiceVersionById(long serviceId);
	Collection<Long> getServiceIdsForServiceSubscription(long id);
	Collection<Long> getBusinessServiceIdsForService(long id);
	
	 //Using EntityGraphs
	<T extends TpiManagedEntity> T  findEntityUsingEntityGrpah(Class<T> entityCls, Long id, String entityGraphName);
	
	
	//Added by Arindam Sikdar
	BusinessService findBusinessServiceById(Long id);
	Collection<Long> getServiceIdsForBusinessService(long id);
	Collection<Long> getServiceSubscriptionIdsForService(long id);
}
